pipeline{
    
    agent none

    stages{
        stage('build'){
            when{
                changeset '**/vote/**'
            }
            agent {
                docker {
                    image 'python:2.7.16-slim'
                    args '--user root'
                }
            }
            steps{
                echo 'Installing dependencies'
                dir('vote'){
                    sh 'pip install -r requirements.txt'
                }
                
            }
        }

        stage('docker-package'){
            agent any
            when{
                changeset "**/vote/**"
                branch 'master'
            }
            steps{
                echo 'Packaging vote app with docker'
                script{
                    docker.withRegistry('https://index.docker.io/v1/', 'dockerlogin') {
                        def workerImage = docker.build("franckabdullah/vote:v${env.BUILD_ID}", "./vote")
                        workerImage.push()
                        workerImage.push("${env.BRANCH_NAME}")
                        workerImage.push("latest")
                    }
                }
            }
        }    
    }
    
    post{
        always{
            echo 'Build pipeline for vote app is completed...'
        }
        failure{
            slackSend (channel: "#cloud-devops-jenkins", message: "Build failed ${env.JOB_NAME} ${env.BUILD_NUMBER} (<${env.BUILD_URL}|Open>)")
        }
        success{
            slackSend (channel: "#cloud-devops-jenkins", message: "Build succeeded ${env.JOB_NAME} ${env.BUILD_NUMBER} (<${env.BUILD_URL}|Open>)")
        }
    }
}
