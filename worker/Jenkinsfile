pipeline{
    agent {
        docker {
            image 'maven'
            args  '-v $HOME/.m2:/root/.m2'
        }
    }

    stages{
        stage('build'){
            when{
                changeset '**/worker/**'
            }
            steps{
                echo 'Compiling worker app'
                dir('worker'){
                    sh 'mvn compile'
                }
                
            }
        }
        
        stage('test'){
            when{
                changeset '**/worker/**'
            }
            steps{
               echo 'Running Unit Tests on worker app' 
               dir('worker'){
                    sh 'mvn clean test'
                }              
            }
        }
        
        stage('package'){
            when{
                branch 'master'
                changeset '**/worker/**'
            }
            steps{
                echo 'Packaging worker app'
                dir('worker'){
                    sh 'mvn package -DskipTests'
                    archiveArtifacts artifacts: '**/target/*.jar', fingerprint: true

                } 
            }
        }
    }

    stage('docker-package'){
	agent any
	steps{
		echo 'Packaging worker app with docker'
		script{
			docker.withRegistry('https://index.docker.io/v1/', 'dockerlogin') {
				def workerImage = docker.build("franckabdullah/worker:v${env.BUILD_ID}", "./worker")
				workerImage.push()
				workerImage.push("latest")
			}
		}
	}
    }
    
    post{
        always{
            echo 'Build pipeline for worker is completed...'
        }
        failure{
            slackSend (channel: "#cloud-devops-jenkins", message: "Build failed ${env.JOB_NAME} ${env.BUILD_NUMBER} (<${env.BUILD_URL}|Open>)")
        }
        success{
            slackSend (channel: "#cloud-devops-jenkins", message: "Build succeeded ${env.JOB_NAME} ${env.BUILD_NUMBER} (<${env.BUILD_URL}|Open>)")
        }
    }
}
